{"version":3,"sources":["webpack:///./src/pages/Kontakt.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/images/alex.jpg"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","google_map_react__WEBPACK_IMPORTED_MODULE_2__","google_map_react__WEBPACK_IMPORTED_MODULE_2___default","_images_alex_jpg__WEBPACK_IMPORTED_MODULE_4__","_images_alex_jpg__WEBPACK_IMPORTED_MODULE_4___default","_components_layout__WEBPACK_IMPORTED_MODULE_5__","Page","styled","div","withConfig","displayName","componentId","Row","Col","StyledImg","img","mapCenter","lat","lng","bootstrapURLKeys","key","mapDivStyle","position","width","height","left","top","border","borderRadius","backgroundColor","padding","createMapOptions","maps","zoomControlOptions","ControlPosition","LEFT_BOTTOM","style","ZoomControlStyle","SMALL","mapTypeControl","mapTypeId","MapTypeId","SATELLITE","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","TOP_LEFT","mapTypeIds","ROADMAP","HYBRID","KontaktPage","a","createElement","className","alt","src","alexImg","href","defaultCenter","defaultZoom","options","text","color","textAlign","target","rel","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","setConfig","pureSFC","StyledNavbar","Navbar","StyledNavbarBrand","NavbarBrand","StyledNavItem","NavItem","StyledNavLink","NavLink","active","Header","siteTitle","_useState","useState","open","setOpen","react_default","es","_ref2","dark","expand","sticky","role","tag","Link","to","NavbarToggler","aria-label","onClick","Collapse","isOpen","navbar","Nav","exists","window","navigator","share","title","url","fa","Layout","gatsby_browser_entry","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","margin","maxWidth","_755544856","node","p"],"mappings":"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","file":"component---src-pages-kontakt-js-4a411ebea8887e64ef64.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport GoogleMapReact from 'google-map-react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport alexImg from '../images/alex.jpg'\nimport Layout from '../components/layout'\n\nconst Page = styled.div`\n  padding: 15px;\n  /* Hinweise von Google ausblenden, Ã¼berschneiden mit dem Ziehsymbol */\n  .gm-style-cc {\n    display: none;\n  }\n`\nconst Row = styled.div``\nconst Col = styled.div`\n  /* side spacing for mobile first views */\n  padding: 10px !important;\n`\nconst StyledImg = styled.img`\n  margin-bottom: 10px;\n`\n\nconst mapCenter = {\n  lat: 47.283746,\n  lng: 8.56382,\n}\nconst bootstrapURLKeys = {\n  key: 'AIzaSyDqE11-ME0QlbB34g_p9lyr6FrwrYPE3y0',\n}\nconst mapDivStyle = {\n  // initially any map object has left top corner at lat lng coordinates\n  // it's on you to set object origin to 0,0 coordinates\n  position: 'absolute',\n  width: 40,\n  height: 40,\n  left: -40 / 2,\n  top: -40 / 2,\n  border: '5px solid red',\n  borderRadius: 40,\n  backgroundColor: 'rgba(0,0,0,0)',\n  padding: 4,\n}\n\nfunction createMapOptions(maps) {\n  return {\n    zoomControlOptions: {\n      position: maps.ControlPosition.LEFT_BOTTOM,\n      style: maps.ZoomControlStyle.SMALL,\n    },\n    mapTypeControl: true,\n    mapTypeId: maps.MapTypeId.SATELLITE,\n    mapTypeControlOptions: {\n      style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\n      position: maps.ControlPosition.TOP_LEFT,\n      mapTypeIds: [\n        maps.MapTypeId.ROADMAP,\n        maps.MapTypeId.SATELLITE,\n        maps.MapTypeId.HYBRID,\n      ],\n    },\n  }\n}\n\nconst KontaktPage = () => (\n  <Layout>\n    <Page className=\"page kontakt\">\n      <Row className=\"row marketing\">\n        <Col className=\"col-lg-3\">\n          <StyledImg\n            alt=\"Alexander Gabriel\"\n            src={alexImg}\n            className=\"js-alexImage\"\n          />\n          <address className=\"js-address\">\n            <strong>Gabriel Software</strong>\n            <br />\n            Alexander Gabriel\n            <br />\n            BÃ¶nirainstrasse 14\n            <br />\n            8800 Thalwil\n            <br />\n            079 372 51 64\n            <br />\n            <a href=\"mailto:#\">alex@gabriel-software.ch</a>\n          </address>\n        </Col>\n        <Col className=\"col-lg-9\">\n          <div style={{ height: 400, width: '100%' }}>\n            <GoogleMapReact\n              bootstrapURLKeys={bootstrapURLKeys}\n              defaultCenter={mapCenter}\n              defaultZoom={19}\n              options={createMapOptions}\n            >\n              <div\n                lat={47.283746}\n                lng={8.56382}\n                text={'Gabriel Software'}\n                style={mapDivStyle}\n              />\n            </GoogleMapReact>\n          </div>\n          <div>\n            <small>\n              <a\n                href=\"https://www.google.ch/maps/place/47%C2%B017'01.9%22N+8%C2%B033'50.1%22E/@47.2838532,8.5632326,172m/data=!3m2!1e3!4b1!4m5!3m4!1s0x0:0x0!8m2!3d47.283852!4d8.56393\"\n                style={{\n                  color: '#0000FF',\n                  textAlign: 'left',\n                }}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                in Google Maps Ã¶ffnen\n              </a>\n            </small>\n          </div>\n        </Col>\n      </Row>\n    </Page>\n  </Layout>\n)\n\nKontaktPage.displayName = 'KontaktPage'\n\nexport default KontaktPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from 'react'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\nimport { FaShare } from 'react-icons/fa'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { Location } from '@reach/router'\nimport { window, exists } from 'browser-monads'\nimport { setConfig } from 'react-hot-loader'\n\nsetConfig({ pureSFC: true })\n\nconst StyledNavbar = styled(Navbar)`\n  &.bg-dark {\n    background-color: #145f00 !important;\n  }\n`\nconst StyledNavbarBrand = styled(NavbarBrand)`\n  font-weight: 600;\n`\nconst StyledNavItem = styled(NavItem)`\n  margin-bottom: 0 !important;\n`\nconst StyledNavLink = styled(NavLink)`\n  border: ${props => (props.active ? '1px white' : 'unset')};\n  border-color: rgba(255, 255, 255, 0.5) !important;\n  font-weight: ${props => (props.active ? '700' : '600')};\n  color: ${props =>\n    props.active ? 'white' : 'rgba(255, 255, 255, 0.7)'} !important;\n`\n\nconst Header = ({ siteTitle }) => {\n  const [open, setOpen] = useState(false)\n  return (\n    <Location>\n      {({ location }) => (\n        <StyledNavbar\n          color=\"dark\"\n          dark\n          expand=\"md\"\n          sticky=\"top\"\n          role=\"navigation\"\n        >\n          <StyledNavbarBrand tag={Link} to=\"/\">\n            {siteTitle}\n          </StyledNavbarBrand>\n          <NavbarToggler\n            aria-label=\"toggle Navbar\"\n            onClick={() => setOpen(!open)}\n          />\n          <Collapse isOpen={open} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <StyledNavItem>\n                <StyledNavLink\n                  tag={Link}\n                  to=\"/Leitbild/\"\n                  active={location.pathname === '/Leitbild/'}\n                >\n                  Leitbild\n                </StyledNavLink>\n              </StyledNavItem>\n              <StyledNavItem>\n                <StyledNavLink\n                  tag={Link}\n                  to=\"/Projekte/\"\n                  active={location.pathname === '/Projekte/'}\n                >\n                  Projekte\n                </StyledNavLink>\n              </StyledNavItem>\n              <StyledNavItem>\n                <StyledNavLink\n                  tag={Link}\n                  to=\"/Technologien/\"\n                  active={location.pathname === '/Technologien/'}\n                >\n                  Technologien\n                </StyledNavLink>\n              </StyledNavItem>\n              <StyledNavItem>\n                <StyledNavLink\n                  tag={Link}\n                  to=\"/Kontakt/\"\n                  active={location.pathname === '/Kontakt/'}\n                >\n                  Kontakt\n                </StyledNavLink>\n              </StyledNavItem>\n              {exists(window) &&\n                window.navigator &&\n                window.navigator.share && (\n                  <StyledNavItem>\n                    <StyledNavLink\n                      href=\"#\"\n                      onClick={() => {\n                        window.navigator.share({\n                          title: 'Gabriel Software',\n                          url: 'https://gabriel-software.ch',\n                        })\n                      }}\n                    >\n                      <FaShare /> Teilen\n                    </StyledNavLink>\n                  </StyledNavItem>\n                )}\n            </Nav>\n          </Collapse>\n        </StyledNavbar>\n      )}\n    </Location>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Gabriel Software' },\n            { name: 'keywords', content: 'Software, Entwicklung, Naturschutz' },\n          ]}\n        >\n          <html lang=\"de\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 1170,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/alex-a70f432a33158b08a935b0f2c1b7ae44.jpg\";"],"sourceRoot":""}